###############################################################
### ALIASES AND FUNCTIONS FOR INTERACTIVE USE
###############################################################


# Clears the scrollback buffer, not just the current screen
alias cls='tput reset'

# The above doesn't work on PuTTY (at least not with TERM=xterm or TERM=xterm-256color)
# the following does work
alias cls="clear; printf '\033[3J'"
alias bd="cd -"
alias cdp="cd -P"

alias grep='grep --color=auto'
alias rm='rm -i'
alias type='builtin type -f'
alias undos=dos2unix


# This implementation replaces an older one that used while/cd..
function upto()
{
    if [[ $# != 1 ]]
    then
        echo "Usage: upto [DIRNAME]"
        echo "       chdir upward (..) until at dir named DIRNAME, or fail"
        return 1
    fi
    local pwd=$(pwd)
    local target=$1
    local full_target=${pwd/\/$target\/*/\/$target}
    if [[ $full_target = $pwd ]]
    then
        echo "Not found in upward path: $target"
        return 1
    else
        cd $full_target
    fi
}

alias pp='echo $PATH | tr : \\12'

function ,() {
    eval "$@" | 1,000
}

# E.g. = 2+2
= () { echo "$@" | bc -l; }

function ec() {
  # Note: emacsclient goes with emacs, NOT xemacs
  # The equivalent (and not as good) for xemacs is gnuclient

  # Connect to running emacs, or start emacs as server and then connect
  emacsclient --create-frame --alternate-editor=  "$@"
}

alias e=subl
alias s=subl

alias deref=realpath

# run commands, displaying the command at as the terminal's title,
# e.g.
function wt () {
    title "$1" "$@"
    "$@" ;# no need to use "eval"; that actually causes problems
}

function tp () {
  TITLE_PREFIX="$@"
}

function lth () {
    ls -lt "$@" | head
}

alias pp='echo $PATH | tr : \\12'

function y () {
    echo "Nothing else to remove.  Pay attention!"
}


# Comma-format numbers
# Usage: , <cmd> [args]
# e.g.:
# $ , ls -l
# $ , du
# This causes large numbers in the output of cmd to be formatted with commas,
# like this: 123,456
# If possible, it preserves columns by eating extra whitespace
# to the left of the number to make up for the insertion of the commas
# It won't eat the last remaining space that separates the number
# from whatever precedes it.
function  , ()
{
   "$@" | 1,000
}

# Usage: <cmd> | 1,000
#        1,000 < <textfile>
# e.g:
# $ ls -l | 1,000
# Note: normally, you would not invoke 1,000 directly, but through , (above)
function 1,000 ()
{
    sed -e ': start' -e 's/\( \?\)\( \?\)\([0-9]\{1,\}\)\([0-9]\{3\}\)/\1\3,\4/g' -e 't start'
}

function check_x()
{
    if [ -z "$DISPLAY" ]
    then
      echo "DISPLAY needs to be set"
      return 1
    elif xset q > /dev/null
    then
        return 0
    else
      echo "Problem with display?" 2>&1
      return 1
    fi
}

function fixtty() {
    stty sane erase ^H
}

type stty > /dev/null 2>&1 || stty() {
    echo -n
}

# these pertain to version management of this and other cygwin environment
# files.  Git normally could not manage a dir such as ~, but wrapped this
# way it does a fine job.
# Use:
#  dots diff
#  dots pull origin master
#  dots commit -a -m "whatever"
#  dots push origin master
# you get the gist.
alias dots='git --git-dir=$HOME/.config.git/ --work-tree=$HOME'

function syncdots()
{
    (dots status -s | grep -q '.' && echo ci && dots commit -a -m "${1:-bla}" || echo NO CO && true) &&
    echo pull &&  dots pull origin master &&
    echo push &&  dots push
}

# show all colors available with ansi escapes
# show them both as BG and as FG
function palette() {
    for code in {000..255}; do
        print -n -P -- "${BG[$code]}[$code]"
    done
    print -P -- "$BG[000]"
    print ""
    for code in {000..255}; do
        print -n -P -- "${FG[$code]}[$code]"
    done
    print -P -- "$BG[000]"
}

# WIP XML processing
# options are like xmlstarlet sel, however, default is --text; override
# that with -X for XML.  Also the first -t is implied.
# Usage: xsl [-X] [-t] <xmlstarlet-sel-t-options>
# eg. accurev show wspaces -fx | xsl -m //Element -v @Name -n
function xsl() {
    if [[ $# = 0 || $1 = -h ]]
    then
        echo "Usage: xsl [-X] [-t] <options>"
        echo "XSL transformation using xmlstarlet sel"
        echo "       -X XML output; default is text"
        echo "       -t introduces template; this is optional and implied"
        echo ""
        echo "From xmlstarlet help:"
        xmlstarlet sel --help | sed -n -e '/^Syntax/,/^There can be/p' | head -n -2
        return
    fi

    local mode
    if [[ $1 = -X ]]
    then
        mode=--xml-decl
        shift
    else
        mode=--text
    fi
    if [[ $1 = -t ]]
    then
        shift
    fi
    xmlstarlet sel $mode -I -D -t "$@"
}

function xpath() {
    if [[ $1 = -x ]]
    then
        shift
        xmlstarlet sel -R -I -D -t -c "$1" -n "$@"
    else
        xmlstarlet sel -t -v "$1" -n "$@"
    fi
}

alias tdc='tree -AdC -I target'
alias tcf='tree -ACF --dirsfirst'

ar()
{
	accurev "$@"
}

# mods    - show modified files in ws
# mods -o - show all outgoing changes
# mods -d - show "default group" (whatever that means; kept + and locally modified?)
# Additional args, if any, are dirs to stat; default is .
mods()
{
    local opt;
    local els;
    case "$1" in
      -[ao]) opt=--outgoing; shift;;
      -d) opt=-d; shift;;
      *)  opt=-m;;
    esac
    if [[ $# = 0 ]]
    then
        set .
    fi
    ar stat $opt -R -fl "${@}"
}

list-ws()
{
    where=${1:-.}
    find $where -maxdepth 1 -type d -name \*.git -prune -o -exec test -f {}/super/pom.xml \; -print -prune
}

alias stripansi='perl -ple "s/\033\[(?:\d*(?:;\d+)*)*m//g;"'

gdiff()
{
   meld "$@"
}


detach()
{
  ( "$@" & ) > /dev/null 2>&1
}

tt()
{
	check_x && detach roxterm "$@"
}

backup-settings()
{(
    cd;
    /bin/rm -f settings.zip;
    zip -q -r settings.zip \
        .accurev .custom.sh .config .kde/share/config .gtkrc-2.0 \
        .robotframework/ride \
        -x '.config/google-chrome/**' \
        -x '.config/sublime-text-3/Backup/**' \
        -x '.config/sublime-text-3/Cache/**' \
        -x '.config/sublime-text-3/Packages/User/Package Control.cache/**' \
        -x '.config/sublime-text-3/Index/**'
    , ls -lt settings.zip
)}

function acgui()
{
    detach /opt/AccuRev/bin/acgui
}

function gc()
{
	detach google-chrome "$@"
}

alias start=xdg-open

alias vpn='sudo openconnect -q --authgroup=1_BOSVPN -b --no-cert-check bosvpn.phtcorp.com'
alias unvpn='sudo pkill -INT openconnect'

alias ipaddr="ip address | sed -nr 's/.*inet.([0-9.]+).* (\w+)/\2 \1/p'"

alias yum='sudo yum'
alias aptitude='sudo aptitude'
alias apt-get='sudo apt-get'
alias synaptic='sudo synaptic'
alias service='sudo service'
alias systemctl='sudo systemctl'
alias sys='sudo systemctl'
alias initctl='sudo initctl'
alias journalctl='journalctl'
alias bum='sudo bum'
alias reboot='sudo reboot'
alias halt='sudo halt'
alias poweroff='sudo poweroff'
alias shutdown='sudo shutdown'
alias ifquery='sudo ifquery'
alias ifdown='sudo ifdown'
alias ifup='sudo ifup'
alias iptables='sudo iptables'
alias ufw='sudo ufw'
