#!/bin/sh

trap "echo ABORTING; exit 1" ERR

function try_login()
{
    local msg=$( curl -s -u"$( base64 -d < ~/.skylogin )" https://cloud.skytap.com/configurations.xml |  xmlstarlet sel -t -m /error -v . -n  )
    if [[ $msg != "" ]]
    then
        echo "**$msg**"
        echo ""
        false
    fi
}

function get_login()
{
    echo "Enter your skytap credentials."
    echo "Most likely, your Skytap username is $USERNAME@phtcorp.com"
    read -p "Username: " username
    read -s -p "Password: " password
    echo ""
    echo ""
    echo $(echo -n "$username:$password" | base64) > ~/.skylogin
}

function login()
{
    if [[ ! -f ~/.skylogin ]]
    then
        get_login
    fi
    while ! try_login
    do
        get_login
    done
}

function usage()
{
    echo "${0##*/}: Select a Skytap configuration to use with SSH"
    echo ""
    echo "Usage: ${0##*/} [-l] [-n] [-s | -t] [PATTERN]"
    echo "   -l  Re-login"
    echo "   -n  Do not resume the configuration; default is to resume"
    echo "   -s  SSH in after selecting the configuration"
    echo "   -t  SSH in and set up tunneling after selecting the configuration"
    echo "   PATTERN  Only list configurations whose name match PATTERN"
    exit
}

RESUME=1
while getopts hlnrst OPTNAME
do
    case $OPTNAME in
     h|\?)
        usage;;
     l) LOGIN=1;;
     n) RESUME=0;;
     s) SSH=1; RESUME=1;;
     t) TUNNEL=1; RESUME=1;;
     r) echo "-r option is obsolete; resume is the default"
        usage;;
    esac
done
shift $(( $OPTIND - 1 ))

if [[ $LOGIN = 1 || ! -f ~/.skylogin ]]
then
    get_login
fi

login

if [[ $# == 0 ]]
then
    pattern=.*
else
    pattern="^.*$1.*"
fi

echo "----------------------------------------------------"
echo "     id  name"
echo "----------------------------------------------------"
curl -s -u"$( base64 -d < ~/.skylogin)" https://cloud.skytap.com/configurations.xml |
xmlstarlet sel -t \
    -m '/configurations/configuration' \
    -v id -o ' ' -v name -n |
  grep -E "$pattern" |
  sort -d -k2 |
  awk -- '{printf "%7d  %s\n", $1, gensub("^[0-9]+ +", "", "g", $0)}'

echo ""
echo -n "Select configuration id: "
read cfgid
if [[ $cfgid = '' ]]
then
    echo "OK, never mind."
    exit
fi

port=$(
    curl -s -u"$( base64 -d < ~/.skylogin)" https://cloud.skytap.com/configurations/$cfgid.xml |
    xmlstarlet sel -t \
        -m '/configuration/vms/vm[name="CentOS 6.0 x64"]' \
        -m 'interfaces/interface/services/service[id="22"]' \
        -v external_port \
        -n
)
sed --in-place -r 's/^\t\t\t\tPort .*/\t\t\t\tPort '$port'/g' ~/.ssh/config
echo "Skytap SSH port number set to: $port"

if [[ $RESUME = 1 ]]
then
    echo -n 'Resuming configuration .'
    curl -s -X PUT -u"$( base64 -d < ~/.skylogin)" https://cloud.skytap.com/configurations/$cfgid.xml?runstate=running > /dev/null
    while [[ $runstate = '' || $runstate = 'busy' || $runstate = 'suspended' ]]
    do
        sleep 2
        echo -n .
        runstate=$(curl -s -X PUT -u"$( base64 -d < ~/.skylogin)" https://cloud.skytap.com/configurations/$cfgid.xml |
            xmlstarlet sel -t \
                -m '/configuration/vms/vm[name="CentOS 6.0 x64"]' \
                -v runstate -n)
    done
    echo " $runstate"
fi

if [[ $SSH ]]
then
  ssh skytap
elif [[ $TUNNEL ]]
then
  ssh skytun
fi