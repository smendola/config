###############################################################
### ALIASES AND FUNCTIONS FOR INTERACTIVE USE
###############################################################

prat()
{ 
    if [[ $TERM == emacs ]]; then
        return;
    fi;

    PRAT=$*;
    local attr_list='0';
#    local attr_list2='0;31;47;7'
    local attr_list2='41'
    local shlvl;
    local title;
    local prompt;
    local remote;

    for attr in $*;
    do
        attr_list="$attr_list;$attr";
    done;

    if [[ $SHLVL > 1 ]]; then
        shlvl=" [$SHLVL]";
    fi
    if [[ $SSH_CONNECTION ]]
    then
        remote=" [REMOTE]"
    fi

    prompt="\n\[\033[${attr_list}m\] \h: \w \[\033[${attr_list2}m\]\$(curbranch_bracketed)$shlvl$remote\[\033[0m\] \n\$ ";
    PS1=$prompt
}


# colorize ls output, if supported
/bin/ls /dev/null --color > /dev/null 2>&1 && alias ls='/bin/ls --color=auto'


bd () {
    cd "$OLDPWD"
}


alias start=cygstart
alias rm='rm -i'
alias which='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'
alias whiches='type -Pa'

PROMPT_COMMAND='set +x; set +v; title ${TITLE_PREFIX}:`dirs`; fixtty' 

upto ()
{
    local target="$1"
    local here="$(pwd)"
    here="${here%/*}"
    while [  "${here##*/}" != "$target"  -a "${here#*/}" != "$here" ] 
    do
        here="${here%/*}"
    done
    
    if [ "${here##*/}" != "$target" ]
    then
        echo "Not found in upward path: $target"
        return
    else
        cd "$here"
    fi
}

alias pp='echo $PATH | tr : \\12'

,() {
    eval "$@" | 1,000
}

ec() {
  # Note: emacsclient goes with emacs, NOT xemacs
  # The equivalent (and not as good) for xemacs is gnuclient
  
  # Connect to running emacs, or start emacs as server and then connect
  # -nw means TTY mode
  emacsclient -a '' -nw "$@"
}

alias e=npp
alias s=sublime

# set the terminal window title bar label 
# e.g.: title MAIN WINDOW 
title() { 
    echo -n $'\e];'"$@"$'\a' ;# works with ANSI terminals 
    # if [ "$TERM" == cygwin ] 
    # then 
        # # the cd works around UNC path warnings if cd'ed to //host/path 
        # (cd C:; cmd /c title "$@") ;# works with DOS terminals 
    # else 
        # echo -n $'\e];'"$@"$'\a' ;# works with ANSI terminals 
    # fi 
} 


# run commands, displaying the command at as the terminal's title,
# e.g. 
wt () {
    title "$@"
    "$@" ;# no need to use "eval"; that actually causes problems
}

tp () {
  TITLE_PREFIX="$@"
}

histchars='!;'

deref ()
{
    if [ -L $1 ]
    then
        /bin/ls -ld $1 | sed -e 's/.*-> //g'
    else
        echo $1
    fi
}

lth () {
    ls -lt "$@" | head
}

alias pp='echo $PATH | tr : \\12'

y () {
    echo "Nothing else to remove.  Pay attention!"
}


# Comma-format numbers
# Usage: , <cmd> [args]
# e.g.: 
# $ , ls -l
# $ , du
# This causes large numbers in the output of cmd to be formatted with commas,
# like this: 123,456
# If possible, it preserves columns by eating extra whitespace
# to the left of the number to make up for the insertion of the commas
# It won't eat the last remaining space that separates the number
# from whatever precedes it.
, ()
{
   "$@" | 1,000
}

# Usage: <cmd> | 1,000
#        1,000 < <textfile>
# e.g: 
# $ ls -l | 1,000
# Note: normally, you would not invoke 1,000 directly, but through , (above)
1,000 ()
{
    sed -e ': start' -e 's/\( \?\)\( \?\)\([0-9]\{1,\}\)\([0-9]\{3\}\)/\1\3,\4/g' -e 't start'
}

jgrep ()
{
    local what="$(echo "$1" | tr / .)";
    local where="$2";
    test -z "$where" && where=.;
    if [ -d "$where" ]; then
        /bin/find "$where" -name '*.jar' -exec sh -c "jar tf \$(dos {} ) | grep -q $what" \; -print;
    elif [ -e "$where" ]; then
        jar tf "$where" | grep "$what";
    else
        echo "jgrep: No such file or directory: $where"
    fi
}

#alias nonag='net stop "Automatic Updates"'

unx() {
    # e.g. /c/Program Files
    cygpath -ua "$1"
}
dos() {
    # e.g. C:\PROGRA~1
    cygpath -da "$1"
}
win() {
    cygpath -wa "$1"
}
mix() {
    # e.g. C:/Program Files
    cygpath -ma "$1"
}

alias jmeter='(cd $TOOLS_DIR/jmeter/bin; nohup ./jmeter.sh &)'


cygsetup() {
    curl -# -o /setup.exe 'http://cygwin.com/setup.exe'
    chmod +x /setup.exe
    cmd /c start $(dos /setup.exe) "$@"
}

mqst()
{
    mvn -q -DskipTests "$@"
}
mqsti()
{
    mqst install "$@"
}
mqstci()
{
    # It's always better to do clean separate from install
    mqst clean "$@"
    mqst install "$@"
}
mci()
{
    mvn clean "$@"
    mvn install "$@"
}


if [[ $(uname) == MINGW* ]] 
then
	echo -n '';# nothing to do
elif [[ -f /usr/bin/git.exe ]]
then
	echo 'Using cygwin git'
elif [[ -d /c/msysgit ]]
then
	echo 'Using MSYS git'

	# cygwin git is not usable, it's busted.
	# msysgit comes with all its own unix programs like ls etc.
	# so it cannot be added to PATH normally.
	git()
	{
		PATH=C:/msysgit/bin:$PATH C:/msysgit/bin/git "$@"
	}
	gitk()
	{
		PATH=C:/msysgit/bin:$PATH C:/msysgit/bin/gitk "$@"
	}
	git-bash()
	{
		PATH=C:/msysgit/bin:$PATH C:/msysgit/bin/git-bash.bat "$@"
	}
else
    echo '*** No git found! ***'
fi


skyssh()
{
    [[ $1 ]] || (echo "Specify port number" && return)
    local port=${1##*:}
    ssh -l dev \
        -Y \
        -p $port \
        -L18080:localhost:8080 \
        -L18081:localhost:8081 \
        -L19000:localhost:9000 \
    services-useast.skytap.com
}

curbranch()
{
    if git branch > /dev/null 2>&1 
    then
	    echo $(git branch | grep '^[*]' | cut -c 3-)
    fi
}

curbranch_bracketed()
{
    __git_ps1 ' (%s) '
    
    #local cb=$(curbranch)    
    #if [[ $cb ]]
    #then
    #    echo " [$cb]"
    #fi
}

fixtty()
{
    stty sane erase ^H
}

jenkins()
{
    (title "JENKINS on 9090"; cd $JENKINS_HOME; java -jar jenkins.war --httpPort=9090)
}

type stty > /dev/null 2>&1 || stty()
{
	echo -n
}

tomcat()
{
	shutdown.sh > /dev/null 2>&1
	sleep 2
    /bin/rm /c/tools/tomcat/logs/*
    title Tomcat
    catalina.sh jpda run
}

# Cause an annotation entry to show up in Fiddler
anno() {
    anno=$(echo $* | tr ' ' '_')
    curl -s --proxy http://localhost:8888 "http://localhost/anno?$anno" > /dev/null; 
}

push-ui() 
{  ( 
	trap "echo '***** FAILED *****'; exit" ERR
    #set -x;
    if [[ $1 = -b ]]
    then
        shift
        ( cd $WORKSPACE/sw-ng-ui && mvn -q -DskipTests clean install )
    else
        cp -vua $WORKSPACE/sw-ng-ui/src/main/webapp/* $WORKSPACE/sw-ng-ui/target/sw-ng-ui-1.1.0-SNAPSHOT/
    fi
    
    cp $WORKSPACE/sw-ng-ui/target/sw-ng-ui-1.1.0-SNAPSHOT/index{-dev,}.html
    
    if [[ $1 = -r ]]
    then
		shift
        tomcat
    fi
    )
}

alias dots='/bin/git --git-dir=$HOME/.config.git/ --work-tree=$HOME'
