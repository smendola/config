function prat() { 
    if [[ $TERM == emacs ]]; then
        return;
    fi;

    PRAT=$*;
    local attr_list='0';
#    local attr_list2='0;31;47;7'
    local attr_list2='41'
    local shlvl;
    local title;
    local prompt;
    local remote;

    for attr in $*;
    do
        attr_list="$attr_list;$attr";
    done;

    if [[ $SHLVL > 1 ]]; then
        shlvl=" [$SHLVL]";
    fi
    if [[ ! -z $SSH_CONNECTION ]]
    then
        remote=" [REMOTE]"
    fi

    prompt="\n\[\033[${attr_list}m\] \h: \w \[\033[${attr_list2}m\]\$(curbranch_bracketed)$shlvl$remote\[\033[0m\] \n\$ ";
    PS1=$prompt
}

# set the terminal window title bar label 
# Usage: title IGNOREDPARAM WINDOW_TITLE
title () {
        if [[ "$DISABLE_AUTO_TITLE" = "true" ]] || [[ "$EMACS" = *term* ]]
        then
                return
        fi
        if [[ "$TERM" = screen* ]]
        then
                echo -ne "\ek$1e\\"
        elif [[ "$TERM" = xterm* ]] || [[ $TERM = rxvt* ]] || [[ "$TERM_PROGRAM" = "iTerm.app" ]]
        then
                echo -ne "\e];$2$\a"
                #echo -ne "\e]2;$2\a"
                echo -ne "\e]1;$1\a"
        fi
}


function curbranch()
{
    if git branch > /dev/null 2>&1 
    then
	    echo $(git branch | grep '^[*]' | cut -c 3-)
    fi
}

function curbranch_bracketed()
{
    __git_ps1 ' (%s) '
    
    #local cb=$(curbranch)    
    #if [[ $cb ]]
    #then
    #    echo " [$cb]"
    #fi
}
